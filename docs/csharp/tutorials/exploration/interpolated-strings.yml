### YamlMime:Tutorial
title: Použití interpolace řetězců k vytvoření formátovaných řetězců
metadata:
  title: Interpolace řetězců – Interaktivní kurz C#
  description: V tomto kurzu použijete prohlížeč k interaktivnímu prozkoumání funkce interpolace řetězce jazyka C#. Napíšete kód v C# a potom si výsledky jeho kompilace a spuštění prohlédnete přímo v prohlížeči.
  audience: Developer
  ms.custom: mvc
  ms.date: 08/24/2018
  ms.topic: interactive-tutorial
  level: Beginner
  displayType: two-column
  interactive: csharp
  ms.openlocfilehash: 072c232613073c10caf6f8927154ce8f24c19af5
  ms.sourcegitcommit: 0100be20fcf23f61dab672deced70059ed71bb2e
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 08/17/2020
  ms.locfileid: "88268007"
items:
- durationInMinutes: 2
  content: >
    V tomto kurzu se naučíte, jak pomocí [interpolace řetězců](../../language-reference/tokens/interpolated.md) vkládat hodnoty do jednoho řetězce. Naučíte se také, jak ovládat formátování textu výsledného řetězce. Prohlížeč použijete k psaní a spouštění kódu C# a výsledky se můžou hned zobrazit.
- title: Vytvoření interpolovaného řetězce
  durationInMinutes: 2
  content: >
    Spusťte v interaktivním okně následující kód. Vyberte tlačítko pro **zadání detailního režimu** . Potom do interaktivního okna zadejte následující blok kódu (nahraďte `<name>` názvem) a vyberte **Spustit**:


    ```csharp

    var name = "<name>";

    Console.WriteLine($"Hello, {name}. It's a pleasure to meet you!");

    ```


    Při spuštění kódu zobrazí **výstup** řetězec, který obsahuje vaše jméno na přání. Řetězcový argument <xref:System.Console.WriteLine%2A> volání metody je *interpolovaná řetězcová výraz*. Jedná se o druh šablony, který umožňuje vytvořit jeden řetězec (označovaný jako *výsledný řetězec*) z řetězce obsahujícího vložený kód. Interpolované řetězcové výrazy jsou zvláště užitečné pro vkládání hodnot do řetězce nebo zřetězení (spojování dohromady) několika řetězců.


    Výše uvedený příklad obsahuje dva prvky, které musí každý interpolující řetězcový výraz obsahovat:


    - Řetězcový literál, který začíná znakem `$` před počátečním znakem uvozovek. Mezi symbolem `$` a znakem uvozovek nesmí být žádné mezery. (Pokud se chcete podívat, co se stane, když ho zahrnete, vložte mezeru za `$` znak v interaktivním okně a spusťte aktualizovaný kód. Kompilátor jazyka C# si bude stěžovat na „neočekávaný znak $“.)


    - Jeden nebo více *výrazů interpolace*. Výraz interpolace je označen levou a pravou závorkou ( `{` a `}` ). Do složených závorek můžete vložit libovolný výraz v C#, který vrací hodnotu (včetně hodnoty `null`).


    Pojďme vyzkoušet několik příkladů interpolace řetězců s některými jinými datovými typy.
- title: Zahrnutí různých datových typů
  durationInMinutes: 5
  content: >
    V předchozím kroku jste použili interpolaci řetězců pro vložení jednoho řetězce do jiného. Každý výraz interpolace, který je součástí interpolující řetězcového výrazu, může být libovolného datového typu, ale. Pojďme do interpolované řetězce zahrnout hodnoty různých výrazů typu datový typ.


    V následujícím příkladu jsme nejdřív definovali [řazenou kolekci](../../language-reference/builtin-types/value-tuples.md) členů, která obsahuje `Name` `Price` členy, a `perPackage` . V interaktivním okně spusťte následující kód:


    ```csharp

    var item = (Name: "eggplant", Price: 1.99m, perPackage: 3);

    var date = DateTime.Now;

    Console.WriteLine($"On {date}, the price of {item.Name} was {item.Price} per {item.perPackage} items.");

    ```


    Všimněte si, že výraz interpolace `item.Price` v interpolované řetězci se překládá na text "1,99" ve výsledném řetězci. To je způsobeno tím, že když typ výsledku výrazu není řetězec, výsledek je přeložen na řetězec následujícím způsobem:


    - Pokud je výraz interpolace vyhodnocen `null` , je použit prázdný řetězec ("" nebo <xref:System.String.Empty?displayProperty=nameWithType> ).


    - Pokud výraz interpolace není vyhodnocen `null` , obvykle `ToString` je volána metoda výsledného výrazu.


    Ve výstupu z tohoto příkladu je datum příliš přesné (cena za lilek se nemění každou sekundu) a hodnota Price neindikuje jednotku měny. V dalším kroku se dozvíte, jak tyto problémy vyřešit kontrolou formátu řetězcové reprezentace výsledků výrazu.
- title: Řízení formátování výrazů interpolace
  durationInMinutes: 5
  content: >
    V předchozím kroku byly do výsledného řetězce vloženy dva špatně formátované řetězce. Jedním byla hodnota data a času, ze které potřebujeme zachovat jenom datum. Druhá se jednalo o cenu, která neuváděla jednotku měny. Oba problémy můžeme snadno vyřešit. Interpolace řetězců umožňuje zadat *formátovací řetězce* , které řídí formátování konkrétních typů. Upravte volání `Console.WriteLine` z předchozího příkladu tak, aby zahrnovalo formátovací řetězce pro výrazy data a ceny, jak je znázorněno na následujícím řádku:


    ```csharp

    Console.WriteLine($"On {date:d}, the price of {item.Name} was {item.Price:C2} per {item.perPackage} items");

    ```


    Řetězec formátu určíte pomocí výrazu interpolace dvojtečkou (":") a formátovacím řetězcem. „d“ je [standardní formátovací řetězec data a času](../../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier), který představuje krátký formát data. C2 je [standardní číselný formátovací řetězec](../../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) , který představuje číslo jako hodnotu měny se dvěma číslicemi za desetinnou čárkou.


    Řada typů v knihovnách .NET podporuje předdefinovanou sadu formátovacích řetězců. Mezi ně patří i všechny číselné typy a typy data a času. Úplný seznam typů podporujících formátovací řetězce najdete v části [Formátovací řetězce a typy v knihovně tříd .NET](../../../standard/base-types/formatting-types.md#format-strings-and-net-types) v článku [Formátovací typy v rozhraní .NET](../../../standard/base-types/formatting-types.md).


    Zkuste upravit řetězce formátu v příkladu, abyste viděli, jak ovlivňují formátování data a času a číselné hodnoty. Ve výrazu `{date:d}` změňte „d“ na „t“ (zobrazí se krátký formát času), „y“ (zobrazí se rok a měsíc) a „yyyy“ (zobrazí se rok v podobě čtyřmístného čísla). Ve výrazu `{price:C2}` změňte „C2“ na „e“ (zobrazí se exponenciální tvar čísla) a „F3“ (zobrazí se číselná hodnota se třemi číslicemi za desetinnou čárkou).


    Kromě řízení formátování můžete také nastavit šířku pole a zarovnání formátovaných řetězců, které jsou zahrnuty ve výsledném řetězci. V dalším kroku se dozvíte, jak na to.
- title: Řízení šířky pole a zarovnání výrazů interpolace
  durationInMinutes: 6
  content: >
    V případě, že je výsledek interpolující řetězcového výrazu naformátován na řetězec, je tento řetězec obsažen ve výsledném řetězci bez počátečních nebo koncových mezer. Zejména při práci se sadou dat, která je schopná řídit šířku pole a zarovnání textu, pomáhají vytvořit čitelnější výstup. Chcete-li se podívat, spusťte následující kód:


    ```csharp
      var inventory = new Dictionary<string, int>()
      {
          ["hammer, ball pein"] = 18,
          ["hammer, cross pein"] = 5,
          ["screwdriver, Phillips #2"] = 14
      };

      Console.WriteLine($"Inventory on {DateTime.Now:d}");
      Console.WriteLine(" ");
      Console.WriteLine($"|{"Item",-25}|{"Quantity",10}|");
      foreach (var item in inventory)
         Console.WriteLine($"|{item.Key,-25}|{item.Value,10}|");
    ```


    Názvy položek jsou zarovnané vlevo a jejich množství jsou zarovnaná vpravo. Zarovnání zadáte přidáním čárky (",") po výrazu interpolace a určením *minimální* šířky pole. Pokud je zadaná hodnota kladné číslo, bude pole zarovnáno vpravo. Pokud se jedná o záporné číslo, bude pole zarovnané vlevo.


    Zkuste odebrat záporné znaménka z `{"Item",-25}` kódu a `{item.Key,-25}` a spustit tento příklad znovu. V tuto chvíli jsou názvy položek zarovnané doprava.


    Můžete zkombinovat specifikátor zarovnání a formátovací řetězec pro jedinou interpolaci výrazu. Chcete-li to provést, zadejte nejprve zarovnání následovaný dvojtečkou a řetězcem formátu. Vyzkoušejte následující kód, který zobrazí tři formátované řetězce s definovanými šířkami polí:


    ```csharp

    Console.WriteLine($"[{DateTime.Now,-20:d}] Hour [{DateTime.Now,-10:HH}] [{1063.342,15:N2}] feet");

    ```
- content: >-
    Dokončili jste Interaktivní kurz o interpolaci řetězce. Můžete navštívit [Web .NET](https://dotnet.microsoft.com/learn/dotnet/hello-world-tutorial/intro) a stáhnout .NET Core SDK, vytvořit projekt na svém počítači a zachovat kódování.


    Další informace naleznete v tématu [interpolace řetězce](../../language-reference/tokens/interpolated.md).
